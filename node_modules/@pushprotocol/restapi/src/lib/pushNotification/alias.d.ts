import { ENV } from '../constants';
import { AliasInfoOptions, AliasOptions } from './PushNotificationTypes';
import { SignerType } from '../types';
import { PushNotificationBaseClass } from './pushNotificationBase';
export declare class Alias extends PushNotificationBaseClass {
    constructor(signer?: SignerType, env?: ENV, account?: string);
    /**
     * @description - fetches alias information
     * @param {AliasOptions} options - options related to alias
     * @returns Alias details
     */
    info: (options: AliasOptions) => Promise<any>;
    /**
     * @description adds an alias to the channel
     * @param {string} alias - alias address in caip to be added
     * @param {AliasInfoOptions} options - options related to alias
     * @returns the transaction hash if the transaction is successfull
     */
    initiate: (alias: string, options?: AliasInfoOptions) => Promise<any>;
    /**
    * @description verifies an alias address of a channel
    * @param {string} channelAddress - channelAddress to be verified
    * @param {AliasInfoOptions} options - options related to alias
    * @returns the transaction hash if the transaction is successfull
    */
    verify: (channelAddress: string, options?: AliasInfoOptions) => Promise<{
        [key: string]: any;
    }>;
}
