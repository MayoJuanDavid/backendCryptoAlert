import { ENV } from '../constants';
export interface AddressValidatorsType {
    [key: string]: ({ address }: {
        address: string;
    }) => boolean;
}
/**
 * CHECK IF THE WALLET IS A VALID PUSH CAIP SCW DID
 * @param wallet scw:eip155:chainId:address
 * @returns boolean
 */
export declare const isValidSCWCAIP: (wallet: string) => boolean;
/**
 * CHECK IF THE WALLET IS A VALID PUSH CAIP NFT DID
 * @param wallet nft:eip155:nftChainId:nftContractAddress:nftTokenId
 * @returns boolean
 */
export declare const isValidNFTCAIP: (wallet: string) => boolean;
/**
 * CHECK IF THE WALLET IS A VALID PUSH CAIP EOA DID
 * @param wallet eip155:chainId:address | eip155:address
 * @returns
 */
export declare const isValidEOACAIP: (wallet: string) => boolean;
/**
 * CHECK IF THE WALLET IS A VALID PUSH CAIP
 * @param wallet
 * @returns boolean
 */
export declare const isValidPushCAIP: (wallet: string) => boolean;
/**
 * CONVERT A VALID PUSH CAIP TO A VALID PUSH DID
 * @param wallet valid wallet CAIP
 * @param env optional env
 * @param chainId optional chainId
 * @param provider optional provider
 * @returns valid Push DID
 */
export declare const convertToValidDID: (wallet: string, env?: ENV, chainId?: number, provider?: any) => Promise<string>;
/**
 * CHECK IF THE WALLET IS A VALID FULL CAIP10
 * @param wallet eip155:chainId:address
 * @returns boolean
 */
export declare const isValidFullCAIP10: (wallet: string) => boolean;
export declare function validateCAIP(addressInCAIP: string): boolean;
export type CAIPDetailsType = {
    blockchain: string;
    networkId: string;
    address: string;
};
export declare function getCAIPDetails(addressInCAIP: string): CAIPDetailsType | null;
export declare function getFallbackETHCAIPAddress(env: ENV, address: string): string;
/**
 * This helper
 *  checks if a VALID CAIP
 *    return the CAIP
 *  else
 *    check if valid ETH
 *      return a CAIP representation of that address (EIP155 + env)
 *    else
 *      throw error!
 */
export declare function getCAIPAddress(env: ENV, address: string, msg?: string): Promise<string>;
export declare const getCAIPWithChainId: (address: string, chainId: number, msg?: string) => string;
export declare const walletToPCAIP10: (account: string) => string;
export declare const pCAIP10ToWallet: (wallet: string) => string;
