import { ENCRYPTION_TYPE, ENV, MessageType } from './constants';
import { ChannelListOrderType, ChannelListSortType, ChannelListType } from './pushNotification/PushNotificationTypes';
import { ChatListType } from './pushapi/pushAPITypes';
import { STREAM, SpaceEventType, VideoEventType } from './pushstream/pushStreamTypes';
import { ConditionType, GROUP_INVITER_ROLE, GROUP_RULES_CATEGORY, GROUP_RULES_PERMISSION, GROUP_RULES_SUB_CATEGORY, NotifictaionType, VideoCallStatus } from './types';
declare const CONSTANTS: {
    ENV: typeof ENV;
    STREAM: typeof STREAM;
    CHAT: {
        LIST_TYPE: typeof ChatListType;
        MESSAGE_TYPE: typeof MessageType;
        GROUP: {
            RULES: {
                CONDITION_TYPE: typeof ConditionType;
                CATEGORY: typeof GROUP_RULES_CATEGORY;
                SUBCATEGORY: typeof GROUP_RULES_SUB_CATEGORY;
                PERMISSION: typeof GROUP_RULES_PERMISSION;
                INVITER_ROLE: typeof GROUP_INVITER_ROLE;
            };
        };
    };
    VIDEO: {
        EVENT: typeof VideoEventType;
        STATUS: typeof VideoCallStatus;
        INITIAL_DATA: import("./types").VideoCallData;
    };
    SPACE: {
        EVENT: typeof SpaceEventType;
        INITIAL_DATA: import("./types").SpaceData;
    };
    ALPHA_FEATURES: {
        SCALABILITY_V2: string;
    };
    USER: {
        ENCRYPTION_TYPE: typeof ENCRYPTION_TYPE;
    };
    NOTIFICATION: {
        TYPE: typeof NotifictaionType;
        CHANNEL: {
            LIST_TYPE: typeof ChannelListType;
        };
    };
    FILTER: {
        CHANNEL_LIST: {
            SORT: typeof ChannelListSortType;
            ORDER: typeof ChannelListOrderType;
        };
        NOTIFICATION_TYPE: typeof NotifictaionType;
        TAGS: {
            USER: string;
            PUSH: string;
            ALL: string;
        };
    };
};
export default CONSTANTS;
