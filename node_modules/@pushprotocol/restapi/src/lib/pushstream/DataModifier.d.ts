import { CreateGroupEvent, UpdateGroupEvent, MessageEvent, MessageEventType, GroupEventType, NotificationEvent, NotificationEventType, ProposedEventNames, VideoEventType, MessageOrigin, VideoEvent } from './pushStreamTypes';
import { VideoCallStatus } from '../types';
export declare class DataModifier {
    static handleChatGroupEvent(data: any, includeRaw?: boolean): any;
    private static mapToJoinGroupEvent;
    private static mapToLeaveGroupEvent;
    private static mapToRequestEvent;
    private static mapToRemoveEvent;
    private static mapToRoleChangeEvent;
    private static buildChatGroupEventMetaAndRaw;
    static mapToGroupEvent(eventType: GroupEventType, incomingData: any, includeRaw: boolean): CreateGroupEvent | UpdateGroupEvent;
    static mapToCreateGroupEvent(incomingData: any, includeRaw: boolean): CreateGroupEvent;
    static mapToUpdateGroupEvent(incomingData: any, includeRaw: boolean): UpdateGroupEvent;
    static mapToMessageEvent(data: any, includeRaw: boolean | undefined, eventType: MessageEventType): MessageEvent;
    static handleChatEvent(data: any, includeRaw?: boolean): any;
    static mapToNotificationEvent(data: any, notificationEventType: NotificationEventType, origin: 'other' | 'self', includeRaw?: boolean): NotificationEvent;
    static convertToProposedName(currentEventName: string): ProposedEventNames;
    static convertToProposedNameForSpace(currentEventName: string): ProposedEventNames;
    static handleToField(data: any): void;
    static handleSpaceEvent(data: any, includeRaw?: boolean): any;
    private static mapToCreateSpaceEvent;
    private static mapToUpdateSpaceEvent;
    private static mapToRequestSpaceEvent;
    private static mapToSpaceApproveEvent;
    private static mapToSpaceRejectEvent;
    private static mapToRemoveSpaceEvent;
    private static mapToJoinSpaceEvent;
    private static mapToLeaveSpaceEvent;
    private static mapToStartSpaceEvent;
    private static mapToStopSpaceEvent;
    static convertToProposedNameForVideo(currentVideoStatus: VideoCallStatus): VideoEventType;
    static mapToVideoEvent(data: any, origin: MessageOrigin, includeRaw?: boolean): VideoEvent;
}
